# Generated by Django 5.1.3 on 2025-08-09 10:29

import datetime
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    dependencies = [
        ('trades', '0008_alter_comment_coach'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.AlterModelOptions(
            name='coachrequest',
            options={'ordering': ['-created_at', '-id']},
        ),
        migrations.AlterModelOptions(
            name='comment',
            options={'ordering': ['-created_at', '-id']},
        ),
        migrations.AlterModelOptions(
            name='screenshot',
            options={'ordering': ['-created_at', '-id']},
        ),
        migrations.AlterModelOptions(
            name='strategy',
            options={'ordering': ['name']},
        ),
        migrations.AlterModelOptions(
            name='trade',
            options={'ordering': ['-entry_datetime', '-id']},
        ),
        migrations.AddField(
            model_name='screenshot',
            name='created_at',
            field=models.DateTimeField(auto_now_add=True, default=datetime.datetime(2025, 8, 9, 12, 0)),
            preserve_default=False,
        ),
        migrations.AddField(
            model_name='trade',
            name='created_at',
            field=models.DateTimeField(default=django.utils.timezone.now),
        ),
        migrations.AddField(
            model_name='trade',
            name='import_hash',
            field=models.CharField(blank=True, db_index=True, max_length=64),
        ),
        migrations.AlterField(
            model_name='profile',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='profile', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AlterField(
            model_name='strategy',
            name='description',
            field=models.TextField(blank=True),
        ),
        migrations.AlterField(
            model_name='strategy',
            name='name',
            field=models.CharField(max_length=128),
        ),
        migrations.AlterField(
            model_name='trade',
            name='commission',
            field=models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=18),
        ),
        migrations.AlterField(
            model_name='trade',
            name='entry_datetime',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AlterField(
            model_name='trade',
            name='entry_price',
            field=models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=18),
        ),
        migrations.AlterField(
            model_name='trade',
            name='exit_datetime',
            field=models.DateTimeField(blank=True, db_index=True, null=True),
        ),
        migrations.AlterField(
            model_name='trade',
            name='exit_price',
            field=models.DecimalField(blank=True, decimal_places=6, max_digits=18, null=True),
        ),
        migrations.AlterField(
            model_name='trade',
            name='profit_loss',
            field=models.DecimalField(decimal_places=6, default=Decimal('0'), max_digits=20),
        ),
        migrations.AlterField(
            model_name='trade',
            name='quantity',
            field=models.DecimalField(decimal_places=4, default=Decimal('1'), help_text='Taille de position (> 0).', max_digits=18, validators=[django.core.validators.MinValueValidator(Decimal('0.0001'))]),
        ),
        migrations.AlterField(
            model_name='trade',
            name='strategy',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='trades', to='trades.strategy'),
        ),
        migrations.AlterField(
            model_name='trade',
            name='symbol',
            field=models.CharField(db_index=True, max_length=50),
        ),
        migrations.AlterField(
            model_name='trade',
            name='trade_type',
            field=models.CharField(choices=[('LONG', 'Long'), ('SHORT', 'Short')], db_index=True, max_length=5),
        ),
        migrations.AlterField(
            model_name='trade',
            name='user',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='trades', to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddIndex(
            model_name='coachrequest',
            index=models.Index(fields=['coach', 'accepted'], name='trades_coac_coach_i_4861de_idx'),
        ),
        migrations.AddIndex(
            model_name='coachrequest',
            index=models.Index(fields=['created_at'], name='trades_coac_created_bfc8a5_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['created_at'], name='trades_comm_created_149e69_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['coach'], name='trades_comm_coach_i_c50c0a_idx'),
        ),
        migrations.AddIndex(
            model_name='comment',
            index=models.Index(fields=['trade'], name='trades_comm_trade_i_139219_idx'),
        ),
        migrations.AddIndex(
            model_name='profile',
            index=models.Index(fields=['is_coach'], name='trades_prof_is_coac_44d17f_idx'),
        ),
        migrations.AddIndex(
            model_name='profile',
            index=models.Index(fields=['coach'], name='trades_prof_coach_i_8ad9a1_idx'),
        ),
        migrations.AddIndex(
            model_name='screenshot',
            index=models.Index(fields=['created_at'], name='trades_scre_created_7af2ff_idx'),
        ),
        migrations.AddIndex(
            model_name='screenshot',
            index=models.Index(fields=['trade'], name='trades_scre_trade_i_9a4162_idx'),
        ),
        migrations.AddIndex(
            model_name='screenshot',
            index=models.Index(fields=['strategy'], name='trades_scre_strateg_9b24c2_idx'),
        ),
        migrations.AddIndex(
            model_name='strategy',
            index=models.Index(fields=['user', 'name'], name='trades_stra_user_id_ef1795_idx'),
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['user', 'entry_datetime'], name='trades_trad_user_id_42320f_idx'),
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['symbol', 'entry_datetime'], name='trades_trad_symbol_f75824_idx'),
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['strategy', 'entry_datetime'], name='trades_trad_strateg_4cc567_idx'),
        ),
        migrations.AddIndex(
            model_name='trade',
            index=models.Index(fields=['created_at'], name='trades_trad_created_6b382f_idx'),
        ),
        migrations.AddConstraint(
            model_name='coachrequest',
            constraint=models.UniqueConstraint(fields=('student', 'coach'), name='uniq_coach_request'),
        ),
        migrations.AddConstraint(
            model_name='strategy',
            constraint=models.UniqueConstraint(fields=('user', 'name'), name='uniq_strategy_user_name'),
        ),
        migrations.AddConstraint(
            model_name='trade',
            constraint=models.UniqueConstraint(condition=models.Q(('import_hash', ''), _negated=True), fields=('user', 'import_hash'), name='uniq_user_importhash'),
        ),
        migrations.AddConstraint(
            model_name='trade',
            constraint=models.CheckConstraint(condition=models.Q(('quantity__gt', 0)), name='chk_trade_qty_gt_0'),
        ),
        migrations.AddConstraint(
            model_name='trade',
            constraint=models.CheckConstraint(condition=models.Q(('trade_type__in', ['LONG', 'SHORT'])), name='trade_type_valid'),
        ),
        migrations.AddConstraint(
            model_name='trade',
            constraint=models.CheckConstraint(condition=models.Q(('exit_datetime__isnull', True), ('entry_datetime__isnull', True), ('exit_datetime__gte', models.F('entry_datetime')), _connector='OR'), name='chk_trade_exit_after_entry'),
        ),
    ]
